SET NOCOUNT ON
--GO
PRINT '>> DESABILITANDO AS CONSTRAINTS'
EXEC sp_MSForEachTable 'ALTER TABLE ? NOCHECK CONSTRAINT all'
--GO
PRINT '>> DESABILITANDO AS TRIGGERS'
DECLARE @LINHACOMANDO NVARCHAR(800) 
DECLARE LINHA CURSOR
FOR   
 SELECT 'DISABLE TRIGGER ' + S.NAME + '.' + O.NAME + ' ON ' + S.NAME + '.' + OBJECT_NAME(O.PARENT_OBJ)
 FROM
  SYSOBJECTS    O
  INNER JOIN SYS.SCHEMAS S ON O.UID = S.SCHEMA_ID 
 WHERE
  O.XTYPE = 'TR'
  --AND  S.NAME + '.' + OBJECT_NAME(O.PARENT_OBJ) = @NOMETB
   
OPEN LINHA 
FETCH NEXT FROM LINHA INTO @LINHACOMANDO  
WHILE (@@FETCH_STATUS = 0) 
BEGIN 
 EXEC (@LINHACOMANDO)
    FETCH NEXT FROM LINHA INTO @LINHACOMANDO 
END  
CLOSE LINHA 
DEALLOCATE LINHA    
--GO
PRINT '>> APAGANDO REGISTROS'
IF (OBJECT_ID('tempdb.dbo.#TB_DELETE')>0)
    DROP TABLE #TB_DELETE
   
CREATE TABLE #TB_DELETE (NM_TABLE VARCHAR(100))
INSERT INTO #TB_DELETE
SELECT S.NAME + '.' + O.NAME AS NM_TABLE
FROM
    SYS.OBJECTS    O
    INNER JOIN SYS.SCHEMAS S ON O.SCHEMA_ID = S.SCHEMA_ID
WHERE
    O.IS_MS_SHIPPED = 0 AND O.TYPE = 'U'
 AND (O.NAME NOT LIKE 'SYS%'
   AND O.NAME NOT IN ('TB_LOG_AUDITORIA_DDL', 'TB_BY5_LOG_GF', 'TB_PARAMETRO_SISTEMA') )
GROUP BY S.NAME, O.NAME   
ORDER BY 1
DECLARE @NM_TABLE   VARCHAR(50),
        @COMANDO VARCHAR(MAX)
                
DECLARE LINHA CURSOR
FOR 
    SELECT NM_TABLE FROM #TB_DELETE
OPEN LINHA 
FETCH NEXT FROM LINHA INTO @NM_TABLE
WHILE (@@FETCH_STATUS = 0) 
BEGIN
    BEGIN TRY
        SET @COMANDO = REPLACE('TRUNCATE TABLE ?', '?', @NM_TABLE)
        EXEC (@COMANDO)
    END TRY
 BEGIN CATCH
     BEGIN TRY
         SET @COMANDO = REPLACE('SET ROWCOUNT 1000; WHILE ((SELECT COUNT(1) FROM ? (NOLOCK)) > 0) DELETE FROM ?; SET ROWCOUNT 0;', '?', @NM_TABLE)
         EXEC (@COMANDO)
     END TRY
     BEGIN CATCH
         PRINT 'ERRO APAGAR TABELA: ' + @NM_TABLE
     END CATCH
    END CATCH
    
    FETCH NEXT FROM LINHA INTO @NM_TABLE
END  
CLOSE LINHA 
DEALLOCATE LINHA
DROP TABLE #TB_DELETE
--GO

PRINT '>> REORDENANDO OS IDENTITYS'
--EXEC sp_MSForEachTable 'DBCC CHECKIDENT ( ?, RESEED, 0)'
IF (OBJECT_ID('tempdb.dbo.#TB_IDENTITY')>0)
    DROP TABLE #TB_IDENTITY
   
IF (OBJECT_ID('tempdb.dbo.#TB_IDENTITY_R')>0)
    DROP TABLE #TB_IDENTITY_R
       
CREATE TABLE #TB_IDENTITY (NM_TABLE VARCHAR(50), NM_COLUNA VARCHAR(50))
CREATE TABLE #TB_IDENTITY_R (NM_TABLE VARCHAR(50), NM_COLUNA VARCHAR(50), RCOUNT INT)
INSERT INTO #TB_IDENTITY
SELECT
 S.NAME + '.[' + O.NAME + ']' AS NM_TABLE, '[' + C.NAME + ']' AS NM_COLUNA
FROM
 SYS.OBJECTS O
 INNER JOIN SYS.SCHEMAS S ON O.SCHEMA_ID = S.SCHEMA_ID 
 INNER JOIN SYS.COLUMNS C ON C.OBJECT_ID = O.OBJECT_ID
WHERE
 C.IS_IDENTITY = 1
 AND O.IS_MS_SHIPPED = 0
 AND O.TYPE = 'U'
 AND O.NAME NOT LIKE 'SYS%'
DECLARE @NM_TABLE_I   VARCHAR(50),
        @NM_COLUNA  VARCHAR(50),
        @RCOUNT     INT,
        @SQL_TOP1   VARCHAR(200)
                
DECLARE LINHA CURSOR
FOR 
    SELECT NM_TABLE, NM_COLUNA FROM #TB_IDENTITY ORDER BY NM_TABLE
OPEN LINHA 
FETCH NEXT FROM LINHA INTO @NM_TABLE_I, @NM_COLUNA
WHILE (@@FETCH_STATUS = 0) 
BEGIN
    SET @SQL_TOP1 = 'SELECT TOP 1 ''@NM_TABLE'', ''@NM_COLUNA'', @NM_COLUNA FROM @NM_TABLE WITH(NOLOCK) ORDER BY @NM_COLUNA DESC'
    SET @SQL_TOP1 = REPLACE(@SQL_TOP1, '@NM_TABLE', @NM_TABLE_I)
    SET @SQL_TOP1 = REPLACE(@SQL_TOP1, '@NM_COLUNA', @NM_COLUNA)
   
    INSERT INTO #TB_IDENTITY_R
 EXEC(@SQL_TOP1)
 
 IF (@@ROWCOUNT=0)
        INSERT INTO #TB_IDENTITY_R VALUES(@NM_TABLE_I, @NM_COLUNA, 1)
 
    FETCH NEXT FROM LINHA INTO @NM_TABLE_I, @NM_COLUNA
END  
CLOSE LINHA 
DEALLOCATE LINHA
 
DECLARE @COMANDO_IDENT NVARCHAR(500)        
DECLARE LINHA CURSOR
FOR 
    SELECT NM_TABLE, NM_COLUNA, RCOUNT FROM #TB_IDENTITY_R ORDER BY NM_TABLE
OPEN LINHA 
FETCH NEXT FROM LINHA INTO @NM_TABLE_I, @NM_COLUNA, @RCOUNT
WHILE (@@FETCH_STATUS = 0) 
BEGIN
 SET @COMANDO_IDENT ='DBCC CHECKIDENT('+ @NM_TABLE_I + ', RESEED, ' + CAST(@RCOUNT AS VARCHAR(20)) + ')'
 print (@COMANDO_IDENT)
    FETCH NEXT FROM LINHA INTO @NM_TABLE_I, @NM_COLUNA, @RCOUNT
END  
CLOSE LINHA 
DEALLOCATE LINHA              
DROP TABLE #TB_IDENTITY
DROP TABLE #TB_IDENTITY_R
--GO

PRINT '>> HABILITANDO AS TRIGGERS'
DECLARE @LINHACOMANDO_T NVARCHAR(800) 
DECLARE LINHA CURSOR
FOR 
 SELECT 'ENABLE TRIGGER ' + S.NAME + '.' + O.NAME + ' ON ' + S.NAME + '.' + OBJECT_NAME(O.PARENT_OBJ)
 FROM
  SYSOBJECTS    O
  INNER JOIN SYS.SCHEMAS S ON O.UID = S.SCHEMA_ID 
 WHERE
  O.XTYPE = 'TR'
  --AND  S.NAME + '.' + OBJECT_NAME(O.PARENT_OBJ) = @NOMETB
   
OPEN LINHA 
FETCH NEXT FROM LINHA INTO @LINHACOMANDO_T  
WHILE (@@FETCH_STATUS = 0) 
BEGIN 
 EXEC (@LINHACOMANDO_T)
    FETCH NEXT FROM LINHA INTO @LINHACOMANDO_T 
END  
CLOSE LINHA 
DEALLOCATE LINHA    
--GO
PRINT '>> HABILITANDO AS CONTRAINTS'
exec sp_MSForEachTable 'ALTER TABLE ? WITH CHECK CHECK CONSTRAINT ALL'
/*
IF (OBJECT_ID('TB_LOG_AUDITORIA_DDL')>0)
BEGIN
    --EXEC (N'TRUNCATE TABLE TB_LOG_AUDITORIA_DDL')
    EXEC (N'DELETE FROM TB_LOG_AUDITORIA_DDL WHERE HOSTNAME = ''MV7H157''')
    EXEC (N'SELECT * FROM TB_LOG_AUDITORIA_DDL(NOLOCK)')
END
*/
--GO
PRINT '>> UPDATE STATISTICS'
DECLARE updatestats CURSOR FOR
SELECT table_schema + '.' + table_name AS TABELA FROM information_schema.tables
where TABLE_TYPE = 'BASE TABLE'

DECLARE @tablename NVARCHAR(128)
DECLARE @sqlCommand NVARCHAR(300)
OPEN updatestats
FETCH NEXT FROM updatestats INTO @tablename
WHILE (@@FETCH_STATUS = 0)
BEGIN
   
    --PRINT N'UPDATING STATISTICS ' + @tablename
    BEGIN TRY
        SET @sqlCommand = 'UPDATE STATISTICS ' + @tablename + ' WITH FULLSCAN'
  EXEC sp_executesql @sqlCommand   
    END TRY
 BEGIN CATCH
     PRINT 'ERRO TABLE ' + @tablename
 END CATCH
    
FETCH NEXT FROM updatestats INTO @tablename
END
CLOSE updatestats
DEALLOCATE updatestats
--GO
PRINT '>> CHECANDO TOTAL DE LINHAS'
IF (OBJECT_ID('tempdb.dbo.#Resumo') >0)
    DROP TABLE #Resumo
   
CREATE TABLE #Resumo (
    Name  NVARCHAR(128),
    [Rows]  INT,
    Reserved VARCHAR(18),
    Data  VARCHAR(18),
    Index_Size VARCHAR(18),
    Unused  VARCHAR(18)
)
-- Declara um cursor para ler todas as tabelas
DECLARE Tabelas CURSOR
FAST_FORWARD FOR
SELECT TABLE_SCHEMA + '.' + TABLE_NAME AS TABELA FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_TYPE = 'BASE TABLE'
-- Declara uma vari?vel para armazenar o nome da tabela
DECLARE @Tabela NVARCHAR(128)
OPEN Tabelas
FETCH NEXT FROM Tabelas INTO @Tabela
WHILE @@FETCH_STATUS = 0
BEGIN
    INSERT INTO #Resumo
    EXEC sp_spaceused @Tabela
   
    FETCH NEXT FROM Tabelas INTO @Tabela   
END
CLOSE Tabelas
DEALLOCATE Tabelas
DROP TABLE #Resumo
   
SET NOCOUNT OFF
--GO

